{"version":3,"sources":["data/dishes.js","step/Step1.jsx","actions/index.js","constants/index.js","step/Step2.jsx","step/Step3.jsx","step/Review.jsx","App.js","serviceWorker.js","reducers/orderFood.js","reducers/index.js","index.js"],"names":["data","Meals","Step1","handleChangeMeal","event","props","selectMeal","target","value","setState","meal","handleChangePeople","console","log","selectPeople","people","FormControl","fullWidth","className","style","width","marginLeft","InputLabel","Select","defaultValue","this","onChange","map","item","MenuItem","key","options","i","push","Component","connect","state","orderFood","dispatch","type","actSelectMeal","actSelectPeople","Step2","handleChangeRestaurant","selectRestaurant","restaurant","result","getListRestaurantByMeal","indexOf","dishes","availableMeals","getListRestaurant","actSelectRestaurant","Step3","foods","listFoods","handleChangeFood","selectedFood","handleChangeCountFood","selectedFoodCount","addFood","selectFood","food","name","count","filter","alert","onDelete","deleteFood","index","findFood","splice","getListFood","forEach","renderFoods","length","TableRow","TableCell","IconButton","onClick","Icon","color","getListFoodByRestaurant","nextProps","Button","variant","marginTop","Table","whiteSpace","TableHead","TableBody","actSelectFood","actDeleteFood","Review","steps","App","handleBack","activeStep","handleNext","checkData","handleReset","resetValue","Stepper","alternativeLabel","step","Step","StepLabel","checkStep","disabled","isDisable","float","marginRight","Boolean","window","location","hostname","match","initialState","action","appReducers","combineReducers","store","createStore","compose","applyMiddleware","thunk","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"+PAAaA,EAAO,CAClB,OAAU,CACR,CACE,GAAM,EACN,KAAQ,iBACR,WAAc,aACd,eAAkB,CAAC,QAAS,WAE9B,CACE,GAAM,EACN,KAAQ,aACR,WAAc,aACd,eAAkB,CAAC,QAAS,WAE9B,CACE,GAAM,EACN,KAAQ,gBACR,WAAc,aACd,eAAkB,CAAC,QAAS,WAE9B,CACE,GAAM,EACN,KAAQ,QACR,WAAc,aACd,eAAkB,CAAC,QAAS,WAE9B,CACE,GAAM,EACN,KAAQ,aACR,WAAc,aACd,eAAkB,CAAC,cAErB,CACE,GAAM,EACN,KAAQ,UACR,WAAc,YACd,eAAkB,CAAC,QAAS,WAE9B,CACE,GAAM,EACN,KAAQ,QACR,WAAc,YACd,eAAkB,CAAC,QAAS,WAE9B,CACE,GAAM,EACN,KAAQ,aACR,WAAc,YACd,eAAkB,CAAC,QAAS,WAE9B,CACE,GAAM,EACN,KAAQ,QACR,WAAc,UACd,eAAkB,CAAC,WAErB,CACE,GAAM,GACN,KAAQ,WACR,WAAc,UACd,eAAkB,CAAC,WAErB,CACE,GAAM,GACN,KAAQ,WACR,WAAc,UACd,eAAkB,CAAC,WAErB,CACE,GAAM,GACN,KAAQ,QACR,WAAc,UACd,eAAkB,CAAC,WAErB,CACE,GAAM,GACN,KAAQ,cACR,WAAc,YACd,eAAkB,CAAC,UAErB,CACE,GAAM,GACN,KAAQ,oBACR,WAAc,YACd,eAAkB,CAAC,cAErB,CACE,GAAM,GACN,KAAQ,mBACR,WAAc,YACd,eAAkB,CAAC,cAErB,CACE,GAAM,GACN,KAAQ,aACR,WAAc,YACd,eAAkB,CAAC,QAAS,WAE9B,CACE,GAAM,GACN,KAAQ,cACR,WAAc,YACd,eAAkB,CAAC,QAAS,WAE9B,CACE,GAAM,GACN,KAAQ,YACR,WAAc,YACd,eAAkB,CAAC,QAAS,WAE9B,CACE,GAAM,GACN,KAAQ,cACR,WAAc,YACd,eAAkB,CAAC,QAAS,WAE9B,CACE,GAAM,GACN,KAAQ,kBACR,WAAc,YACd,eAAkB,CAAC,QAAS,WAE9B,CACE,GAAM,GACN,KAAQ,kBACR,WAAc,WACd,eAAkB,CAAC,QAAS,WAE9B,CACE,GAAM,GACN,KAAQ,kBACR,WAAc,WACd,eAAkB,CAAC,QAAS,WAE9B,CACE,GAAM,GACN,KAAQ,iBACR,WAAc,WACd,eAAkB,CAAC,QAAS,WAE9B,CACE,GAAM,GACN,KAAQ,gBACR,WAAc,WACd,eAAkB,CAAC,QAAS,WAE9B,CACE,GAAM,GACN,KAAQ,kBACR,WAAc,WACd,eAAkB,CAAC,WAErB,CACE,GAAM,GACN,KAAQ,YACR,WAAc,gBACd,eAAkB,CAAC,QAAS,WAE9B,CACE,GAAM,GACN,KAAQ,YACR,WAAc,gBACd,eAAkB,CAAC,QAAS,WAE9B,CACE,GAAM,GACN,KAAQ,WACR,WAAc,gBACd,eAAkB,CAAC,QAAS,WAE9B,CACE,GAAM,GACN,KAAQ,UACR,WAAc,gBACd,eAAkB,CAAC,QAAS,WAE9B,CACE,GAAM,GACN,KAAQ,eACR,WAAc,eACd,eAAkB,CAAC,YAAa,QAAS,WAE3C,CACE,GAAM,GACN,KAAQ,UACR,WAAc,eACd,eAAkB,CAAC,QAAS,WAE9B,CACE,GAAM,GACN,KAAQ,qBACR,WAAc,eACd,eAAkB,CAAC,QAAS,WAE9B,CACE,GAAM,GACN,KAAQ,kBACR,WAAc,eACd,eAAkB,CAAC,QAAS,a,gFClM5BC,EAAQ,CAAC,YAAY,QAAQ,UAC7BC,E,4MACFC,iBAAmB,SAAAC,GACf,EAAKC,MAAMC,WAAWF,EAAMG,OAAOC,OACnC,EAAKC,SAAS,CACVC,KAAON,EAAMG,OAAOC,S,EAG5BG,mBAAqB,SAAAP,GACjBQ,QAAQC,IAAIT,EAAMG,OAAOC,OACzB,EAAKH,MAAMS,aAAaV,EAAMG,OAAOC,OACrC,EAAKC,SAAS,CACVM,OAASX,EAAMG,OAAOC,S,uDAIrB,IAAD,OACJ,OACI,6BACI,kBAACQ,EAAA,EAAD,CAAaC,WAAW,EAAOC,UAAU,QAAQC,MAAS,CAACC,MAAM,QAASC,WAAW,SACjF,kBAACC,EAAA,EAAD,KAAc,uDACd,kBAACC,EAAA,EAAD,CAEIC,aAAcC,KAAKpB,MAAMK,KAAOe,KAAKpB,MAAMK,KAAO,GAClDgB,SAAU,SAACtB,GAAD,OAAW,EAAKD,iBAAiBC,KAE1CH,EAAM0B,KAAI,SAACC,GACR,OACI,kBAACC,EAAA,EAAD,CAAUC,IAAKF,EAAMpB,MAAOoB,GACvBA,QAMrB,kBAACZ,EAAA,EAAD,CAAaC,WAAW,EAAOC,UAAU,QAAQC,MAAS,CAACC,MAAM,QAASC,WAAW,UACjF,kBAACC,EAAA,EAAD,KAAc,gEACd,kBAACC,EAAA,EAAD,CAEIC,aAAcC,KAAKpB,MAAMU,OAASU,KAAKpB,MAAMU,OAAS,GACtDW,SAAU,SAACtB,GAAD,OAAW,EAAKO,mBAAmBP,KAS3C,WAGE,IAFA,IAAM2B,EAAU,GAEPC,EAAI,EAAGA,GAAK,GAAIA,IACrBD,EAAQE,KACJ,kBAACJ,EAAA,EAAD,CAAUC,IAAKE,EAAGxB,MAAOwB,GACpBA,IAKb,OAAOD,EAXT,U,GAhDNG,aAmFLC,eAhBS,SAAAC,GACpB,MAAO,CACHrB,OAAQqB,EAAMC,UAAUtB,OACxBL,KAAM0B,EAAMC,UAAU3B,SAGH,SAAC4B,EAAUjC,GAClC,MAAO,CACHC,WAAY,SAACI,GACT4B,EC/EgB,SAAC5B,GACzB,MAAO,CACH6B,KCJmB,cDKnB7B,QD4Ea8B,CAAc9B,KAE3BI,aAAc,SAACC,GACXuB,EC5EkB,SAACvB,GAC3B,MAAO,CACHwB,KCTqB,gBDUrBxB,UDyEa0B,CAAgB1B,QAItBoB,CAA6CjC,GGnFtDwC,E,4MAqBFC,uBAAyB,SAACvC,GACtB,EAAKC,MAAMuC,iBAAiBxC,EAAMG,OAAOC,OACzC,EAAKC,SAAS,CACVoC,WAAazC,EAAMG,OAAOC,S,kEAtB9B,IAAIsC,EAAQ,GAOZ,OANArB,KAAKsB,0BAA0BpB,KAAI,SAAAnB,IAEjB,IADFsC,EAAOE,QAAQxC,EAAMqC,aAE7BC,EAAOb,KAAKzB,EAAMqC,eAGnBC,I,gDAEe,IAAD,OACjBA,EAAS,GAOb,OANA9C,EAAKiD,OAAOtB,KAAI,SAAAnB,IAEE,IADFA,EAAM0C,eAAeF,QAAQ,EAAK3C,MAAMK,OAEhDoC,EAAOb,KAAKzB,MAGbsC,I,+BAQF,IAAD,OACJ,OACI,kBAAC9B,EAAA,EAAD,CAAaC,WAAW,EAAOC,UAAU,QAAQC,MAAS,CAACC,MAAM,QAASC,WAAW,UACjF,kBAACC,EAAA,EAAD,KAAc,6DACd,kBAACC,EAAA,EAAD,CAEIC,aAAcC,KAAKpB,MAAMwC,WAAapB,KAAKpB,MAAMwC,WAAa,GAC9DnB,SAAU,SAACtB,GAAD,OAAW,EAAKuC,uBAAuBvC,KAEhDqB,KAAK0B,oBAAoBxB,KAAI,SAACC,GAC3B,OACI,kBAACC,EAAA,EAAD,CAAUC,IAAKF,EAAMpB,MAAOoB,GACvBA,Y,GAvCbM,aAgELC,eAhBS,SAAAC,GACpB,MAAM,CACFrB,OAAQqB,EAAMC,UAAUtB,OACxBL,KAAM0B,EAAMC,UAAU3B,KACtBmC,WAAYT,EAAMC,UAAUQ,eAIT,SAAAP,GACvB,MAAO,CACHM,iBAAkB,SAACC,GACfP,EFlDuB,SAACO,GAChC,MAAM,CACFN,KCdyB,oBDezBM,cE+CaO,CAAoBP,QAK1BV,CAA4CO,G,+DChErDW,E,4MACFjB,MAAM,CACFkB,MAAQ,GACRC,UAAU,I,EAuCdC,iBAAmB,SAACpD,GAChB,EAAKK,SAAS,CACVgD,aAAerD,EAAMG,OAAOC,S,EAKpCkD,sBAAwB,SAACtD,GACrB,EAAKK,SAAS,CACVkD,kBAAoBvD,EAAMG,OAAOC,S,EAIzCoD,QAAU,WAAM,IAAD,EAC4B,EAAKxB,MAAvCqB,EADM,EACNA,aAAaE,EADP,EACOA,kBACdL,EAAQ,EAAKlB,MAAMkB,MACvB,GAAGK,GAAqBF,EAAa,CACjC,EAAKpD,MAAMwD,WAAWJ,EAAaE,GACvB,MAATL,IACCA,EAAQ,IAEZ,IAAIQ,EAAO,GACXA,EAAKC,KAAON,EACZK,EAAKE,MAAQL,EACbL,EAAMrB,KAAK6B,GACX,IAAIP,EAAY,EAAKnB,MAAMmB,UAAUU,QAAO,SAAArC,GAAI,OAAIA,IAAS,EAAKQ,MAAMqB,gBACxE,EAAKhD,SAAS,CACV6C,MAAMA,EACNC,UAAUA,EACVE,aAAe,YAInBS,MAAM,e,EAIdC,SAAW,SAACL,GACR,EAAKzD,MAAM+D,WAAWN,GACtB,IAAIR,EAAQ,EAAKlB,MAAMkB,MACnBe,EAAQ,EAAKC,SAAShB,EAAMQ,EAAKC,MACrCT,EAAMiB,OAAOF,EAAM,GACnB,IAAId,EAAY,EAAKiB,cACrB,EAAKnE,MAAMiD,MAAM3B,KAAI,SAAAmC,GACjBP,EAAYA,EAAUU,QAAO,SAAArC,GAAI,OAAIA,IAASkC,EAAKC,WAEvD,EAAKtD,SAAS,CACV6C,MAAMA,EACNC,UAAUA,K,EAGlBe,SAAW,SAAChB,EAAOS,GACf,IAAIjB,GAAU,EAMd,OALAQ,EAAMmB,SAAQ,SAACX,EAAMO,GACbP,EAAKC,OAASA,IACdjB,EAASuB,MAGVvB,G,EAEX4B,YAAc,SAACpB,GACX,IAAIR,EAAS,KAiBb,OAhBAlC,QAAQC,IAAIyC,GACTA,EAAMqB,OAAS,IACd7B,EAASQ,EAAM3B,KAAI,SAACmC,EAAKhC,GACrB,OACI,kBAAC8C,EAAA,EAAD,CAAU9C,IAAKA,GACX,kBAAC+C,EAAA,EAAD,KAAYf,EAAKC,MACjB,kBAACc,EAAA,EAAD,KAAYf,EAAKE,OACjB,kBAACa,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAYC,QAAS,kBAAM,EAAKZ,SAASL,KACrC,kBAACkB,EAAA,EAAD,CAAMC,MAAM,SAAZ,YAOjBnC,G,wEAnHe,IAAD,OACjBA,EAAQ,GAOZ,OANA9C,EAAKiD,OAAOtB,KAAI,SAAAnB,GACTA,EAAMqC,aAAe,EAAKxC,MAAMwC,YAC/BC,EAAOb,KAAKzB,MAIbsC,I,oCAEG,IAAD,OACLA,EAAS,GAOb,OANArB,KAAKyD,0BAA0BvD,KAAI,SAAAnB,IAEjB,IADFA,EAAM0C,eAAeF,QAAQ,EAAK3C,MAAMK,OAEhDoC,EAAOb,KAAKzB,EAAMuD,SAGnBjB,I,2CAGP,IAAIS,EAAY9B,KAAK+C,cAClB/C,KAAKpB,MAAMiD,OACV7B,KAAKpB,MAAMiD,MAAM3B,KAAI,SAAAmC,GACjBP,EAAYA,EAAUU,QAAO,SAAArC,GAAI,OAAIA,IAASkC,EAAKC,WAEvDtC,KAAKhB,SAAS,CACV6C,MAAM7B,KAAKpB,MAAMiD,MACjBC,UAAUA,KAId9B,KAAKhB,SAAS,CACV8C,UAAUA,M,gDAoFI4B,GACtBvE,QAAQC,IAAIsE,EAAU7B,S,+BAEjB,IAAD,OAEAA,EAAQ7B,KAAKW,MAAMkB,MAAQ7B,KAAKW,MAAMkB,MAAQ,GAClD,OACI,6BACI,kBAACtC,EAAA,EAAD,CAAaC,WAAW,EAAOC,UAAU,QAAQC,MAAS,CAACC,MAAM,QAASC,WAAW,UACjF,kBAACC,EAAA,EAAD,KAAc,6DACd,kBAACC,EAAA,EAAD,CAGIG,SAAU,SAACtB,GAAD,OAAW,EAAKoD,iBAAiBpD,KAE1CqB,KAAKW,MAAMmB,UAAU5B,KAAI,SAACC,GACvB,OACI,kBAACC,EAAA,EAAD,CAAUC,IAAKF,EAAMpB,MAAOoB,GACvBA,QAMrB,kBAACZ,EAAA,EAAD,CAAaC,WAAW,EAAOC,UAAU,QAAQC,MAAS,CAACC,MAAM,QAASC,WAAW,UACjF,kBAACC,EAAA,EAAD,KAAc,gEACd,kBAACC,EAAA,EAAD,CAGIG,SAAU,SAACtB,GAAD,OAAW,EAAKsD,sBAAsBtD,KAS9C,WAGE,IAFA,IAAM2B,EAAU,GAEPC,EAAI,EAAGA,GAAK,GAAIA,IACrBD,EAAQE,KACJ,kBAACJ,EAAA,EAAD,CAAUC,IAAKE,EAAGxB,MAAOwB,GACpBA,IAKb,OAAOD,EAXT,KAeV,kBAACqD,EAAA,EAAD,CAAQC,QAAQ,YAAYN,QAAStD,KAAKmC,QAASqB,MAAM,UAAU9D,MAAO,CAACmE,UAAU,OAAQjE,WAAW,SAAxG,SACA,kBAACkE,EAAA,EAAD,CAAOrE,UAAU,aAAaC,MAAO,CAAEqE,WAAY,MAAOpE,MAAM,QAASC,WAAW,MAAOiE,UAAU,SACjG,kBAACG,EAAA,EAAD,KACI,kBAACb,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,aACA,kBAACA,EAAA,EAAD,cACA,kBAACA,EAAA,EAAD,QAGR,kBAACa,EAAA,EAAD,KACKjE,KAAKiD,YAAYpB,U,GAzLtBpB,aAoNLC,eApBS,SAAAC,GACpB,MAAM,CACFrB,OAAQqB,EAAMC,UAAUtB,OACxBL,KAAM0B,EAAMC,UAAU3B,KACtBmC,WAAYT,EAAMC,UAAUQ,WAC5BS,MAAOlB,EAAMC,UAAUiB,UAIJ,SAAAhB,GACvB,MAAO,CACHuB,WAAY,SAACC,EAAKE,GACd1B,EH7LiB,SAACyB,EAAKC,GAC/B,IAAIF,EAAO,GAGX,OAFAA,EAAKC,KAAOA,EACZD,EAAKE,MAAQA,EACP,CACFzB,KCtBiB,cDuBjBuB,QGuLa6B,CAAc7B,EAAKE,KAEhCI,WAAY,SAACN,GACTxB,EHhLiB,SAACwB,GAE1B,OADAlD,QAAQC,IAAIiD,GACN,CACFvB,KClCmB,cDmCnBuB,QG4Ka8B,CAAc9B,QAKpB3B,CAA4CkB,GCtNrDwC,E,4MACFnB,YAAc,SAACpB,GACX,IAAIR,EAAS,KAWb,OAVGQ,EAAMqB,OAAS,IACd7B,EAASQ,EAAM3B,KAAI,SAACmC,EAAKhC,GACrB,OACI,kBAAC8C,EAAA,EAAD,CAAU9C,IAAKA,GACX,kBAAC+C,EAAA,EAAD,KAAYf,EAAKC,MACjB,kBAACc,EAAA,EAAD,KAAYf,EAAKE,YAK1BlB,G,uDAGP,OACI,yBAAK3B,MAAO,CAACE,WAAW,UACpB,qCAAWI,KAAKpB,MAAMK,MACtB,uCAAae,KAAKpB,MAAMU,QACxB,2CAAiBU,KAAKpB,MAAMwC,YAC5B,wCACA,kBAAC0C,EAAA,EAAD,CAAOrE,UAAU,aAAaC,MAAO,CAAEqE,WAAY,MAAOpE,MAAM,QAASC,WAAW,UAChF,kBAACoE,EAAA,EAAD,KACI,kBAACb,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,aACA,kBAACA,EAAA,EAAD,gBAGR,kBAACa,EAAA,EAAD,KACKjE,KAAKiD,YAAYjD,KAAKpB,MAAMiD,c,GA9BhCpB,aAoDNC,eAfS,SAAAC,GACpB,MAAM,CACFrB,OAAQqB,EAAMC,UAAUtB,OACxBL,KAAM0B,EAAMC,UAAU3B,KACtBmC,WAAYT,EAAMC,UAAUQ,WAC5BS,MAAOlB,EAAMC,UAAUiB,UAIJ,SAAAhB,GACvB,MAAO,KAKIH,CAA4C0D,GCzCrDC,EAAQ,CAAC,SAAS,SAAS,SAAS,UAEpCC,E,kDACJ,WAAY1F,GAAQ,IAAD,8BACjB,cAAMA,IAMR2F,WAAa,WACX,IAAIC,EAAa,EAAK7D,MAAM6D,WAAa,EACzC,EAAKxF,SAAS,CACZwF,WAAWA,KAVI,EAanBC,WAAa,WACX,GAAwB,IAArB,EAAKC,YAAkB,CACxB,IAAIF,EAAa,EAAK7D,MAAM6D,WAAa,EACzC,EAAKxF,SAAS,CACZwF,WAAWA,SAGc,IAArB,EAAKE,YACXjC,MAAM,gBAEqB,IAArB,EAAKiC,aACXjC,MAAM,iBAxBS,EA4BnBkC,YAAc,WACZ,EAAK/F,MAAMgG,aACX,EAAK5F,SAAS,CACZwF,WAAW,KA/BI,EAkCnBE,UAAY,WAAM,IACXF,EAAc,EAAK7D,MAAnB6D,WADU,EAEsB,EAAK5F,MAArCU,EAFU,EAEVA,OAAOL,EAFG,EAEHA,KAAKmC,EAFF,EAEEA,WAAWS,EAFb,EAEaA,MACxBR,EAAS,EACb,GAAkB,IAAfmD,EAKCnD,EAJE/B,GAAYL,EAIL,EAHA,OAMR,GAAkB,IAAfuF,EAKJnD,EAJED,EAIO,EAHA,OAMR,GAAkB,IAAfoD,EACN,GAAI3C,EAGA,CACF,IAAI9C,EAAQ,KACZ8C,EAAM3B,KAAI,SAAAmC,GACRtD,GAAgBsD,EAAKE,SAGrBlB,EADCtC,EAAQO,EACA,EAGA,OAXX+B,EAAS,EAeb,OAAOA,GArEP,EAAKV,MAAQ,CACX6D,WAAY,GAHG,E,wDA2EjB,OADmBxE,KAAKW,MAAnB6D,YAEH,KAAK,EACH,OAAQ,kBAAC,EAAD,MACV,KAAK,EACH,OAAQ,kBAAC,EAAD,MACV,KAAK,EACH,OAAQ,kBAAC,EAAD,MACV,KAAK,EACH,OAAQ,kBAAC,EAAD,S,+BAIJ,IACHA,EAAcxE,KAAKW,MAAnB6D,WACL,OACE,yBAAK/E,UAAU,OACb,kBAACoF,EAAA,EAAD,CAASL,WAAYA,EAAYM,kBAAgB,GAC9CT,EAAMnE,KAAI,SAAC6E,GAAD,OACT,kBAACC,EAAA,EAAD,CAAM3E,IAAK0E,GACT,kBAACE,EAAA,EAAD,KAAYF,QAIjB/E,KAAKkF,YACN,yBAAKxF,MAAO,CAACmE,UAAU,SACpBW,IAAeH,EAAMnB,OACpB,6BACE,kBAACS,EAAA,EAAD,CAAQC,QAAQ,YAAYN,QAAStD,KAAK2E,YAAanB,MAAM,UAAU9D,MAAO,CAACE,WAAW,SAA1F,UAGF,6BACE,6BACE,kBAAC+D,EAAA,EAAD,CACEwB,SAAyB,IAAfX,EACVlB,QAAStD,KAAKuE,WACd7E,MAAO,CAACE,WAAW,SAHrB,QAOA,kBAAC+D,EAAA,EAAD,CAAQwB,SAAUnF,KAAKW,MAAMyE,UAAWxB,QAAQ,YAAYJ,MAAM,UAAUF,QAAStD,KAAKyE,WAAY/E,MAAO,CAAC2F,MAAM,QAASC,YAAY,SACtId,IAAeH,EAAMnB,OAAS,EAAI,SAAW,gB,GApH9CzC,aAgJHC,eAjBS,SAAAC,GACtB,MAAM,CACFrB,OAAQqB,EAAMC,UAAUtB,OACxBL,KAAM0B,EAAMC,UAAU3B,KACtBmC,WAAYT,EAAMC,UAAUQ,WAC5BS,MAAOlB,EAAMC,UAAUiB,UAIF,SAAAhB,GACzB,MAAO,CACL+D,WAAY,WACV/D,EL5HI,CACFC,KC5BmB,oBI4JZJ,CAA4C4D,GCpJvCiB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,oBCjBFC,EAAe,GACf/C,EAAW,SAAChB,EAAOS,GACnB,IAAIjB,GAAU,EAMd,OALAQ,EAAMmB,SAAQ,SAACX,EAAMO,GACbP,EAAKC,OAASA,IACdjB,EAASuB,MAGVvB,GAuDIT,EArDG,WAA8B,IAA7BD,EAA4B,uDAAtBiF,EAAaC,EAAS,uCAC3C,OAAOA,EAAO/E,MACV,INbmB,cMiBf,OAHAH,EAAM1B,KAAO4G,EAAO5G,KACpB0B,EAAMS,WAAa,GACnBT,EAAMkB,MAAQ,KACP,eACAlB,GAGX,INpBqB,gBMuBjB,OAFAA,EAAMrB,OAASuG,EAAOvG,OACtBqB,EAAMkB,MAAQ,KACP,eACAlB,GAGX,IN1ByB,oBM6BrB,OAFAA,EAAMS,WAAayE,EAAOzE,WAC1BT,EAAMkB,MAAQ,KACP,eACAlB,GAGX,INhCiB,cMiCb,IAAIkB,EAAQlB,EAAMkB,MAMlB,OALY,MAATA,IACCA,EAAQ,IAEZA,EAAMrB,KAAKqF,EAAOxD,MAClB1B,EAAMkB,MAAQA,EACP,eACAlB,GAGX,IN1CmB,cM4Cf,OADAA,EAAQ,GACR,eACOA,GAGX,IN/CmB,cMgDf,IAAIiC,EAAQC,EAASlC,EAAMkB,MAAMgE,EAAOxD,KAAKC,MAG7C,OAFAnD,QAAQC,IAAIwD,GACZjC,EAAMkB,MAAMiB,OAAOF,EAAM,GACzB,eACOjC,GAGX,QACI,OAAOA,ICvDJmF,EAJKC,YAAgB,CAChCnF,c,QCQEoF,EAAQC,YACVH,EACAI,YACIC,YAAgBC,KAChBZ,OAAOa,8BAAgCb,OAAOa,iCAGtDC,IAASC,OACL,kBAAC,IAAD,CAAUP,MAAOA,GACb,kBAAC,EAAD,OAEJQ,SAASC,eAAe,SH6GtB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACL9H,QAAQ8H,MAAMA,EAAMC,c","file":"static/js/main.1e468b7d.chunk.js","sourcesContent":["export const data = {\r\n  \"dishes\": [\r\n    {\r\n      \"id\": 1,\r\n      \"name\": \"Chicken Burger\",\r\n      \"restaurant\": \"Mc Donalds\",\r\n      \"availableMeals\": [\"lunch\", \"dinner\"]\r\n    },\r\n    {\r\n      \"id\": 2,\r\n      \"name\": \"Ham Burger\",\r\n      \"restaurant\": \"Mc Donalds\",\r\n      \"availableMeals\": [\"lunch\", \"dinner\"]\r\n    },\r\n    {\r\n      \"id\": 3,\r\n      \"name\": \"Cheese Burger\",\r\n      \"restaurant\": \"Mc Donalds\",\r\n      \"availableMeals\": [\"lunch\", \"dinner\"]\r\n    },\r\n    {\r\n      \"id\": 4,\r\n      \"name\": \"Fries\",\r\n      \"restaurant\": \"Mc Donalds\",\r\n      \"availableMeals\": [\"lunch\", \"dinner\"]\r\n    },\r\n    {\r\n      \"id\": 5,\r\n      \"name\": \"Egg Muffin\",\r\n      \"restaurant\": \"Mc Donalds\",\r\n      \"availableMeals\": [\"breakfast\"]\r\n    },\r\n    {\r\n      \"id\": 6,\r\n      \"name\": \"Burrito\",\r\n      \"restaurant\": \"Taco Bell\",\r\n      \"availableMeals\": [\"lunch\", \"dinner\"]\r\n    },\r\n    {\r\n      \"id\": 7,\r\n      \"name\": \"Tacos\",\r\n      \"restaurant\": \"Taco Bell\",\r\n      \"availableMeals\": [\"lunch\", \"dinner\"]\r\n    },\r\n    {\r\n      \"id\": 8,\r\n      \"name\": \"Quesadilla\",\r\n      \"restaurant\": \"Taco Bell\",\r\n      \"availableMeals\": [\"lunch\", \"dinner\"]\r\n    },\r\n    {\r\n      \"id\": 9,\r\n      \"name\": \"Steak\",\r\n      \"restaurant\": \"BBQ Hut\",\r\n      \"availableMeals\": [\"dinner\"]\r\n    },\r\n    {\r\n      \"id\": 10,\r\n      \"name\": \"Yakitori\",\r\n      \"restaurant\": \"BBQ Hut\",\r\n      \"availableMeals\": [\"dinner\"]\r\n    },\r\n    {\r\n      \"id\": 11,\r\n      \"name\": \"Nankotsu\",\r\n      \"restaurant\": \"BBQ Hut\",\r\n      \"availableMeals\": [\"dinner\"]\r\n    },\r\n    {\r\n      \"id\": 12,\r\n      \"name\": \"Piman\",\r\n      \"restaurant\": \"BBQ Hut\",\r\n      \"availableMeals\": [\"dinner\"]\r\n    },\r\n    {\r\n      \"id\": 13,\r\n      \"name\": \"Vegan Bento\",\r\n      \"restaurant\": \"Vege Deli\",\r\n      \"availableMeals\": [\"lunch\"]\r\n    },\r\n    {\r\n      \"id\": 14,\r\n      \"name\": \"Coleslaw Sandwich\",\r\n      \"restaurant\": \"Vege Deli\",\r\n      \"availableMeals\": [\"breakfast\"]\r\n    },\r\n    {\r\n      \"id\": 15,\r\n      \"name\": \"Grilled Sandwich\",\r\n      \"restaurant\": \"Vege Deli\",\r\n      \"availableMeals\": [\"breakfast\"]\r\n    },\r\n    {\r\n      \"id\": 16,\r\n      \"name\": \"Veg. Salad\",\r\n      \"restaurant\": \"Vege Deli\",\r\n      \"availableMeals\": [\"lunch\", \"dinner\"]\r\n    },\r\n    {\r\n      \"id\": 17,\r\n      \"name\": \"Fruit Salad\",\r\n      \"restaurant\": \"Vege Deli\",\r\n      \"availableMeals\": [\"lunch\", \"dinner\"]\r\n    },\r\n    {\r\n      \"id\": 18,\r\n      \"name\": \"Corn Soup\",\r\n      \"restaurant\": \"Vege Deli\",\r\n      \"availableMeals\": [\"lunch\", \"dinner\"]\r\n    },\r\n    {\r\n      \"id\": 19,\r\n      \"name\": \"Tomato Soup\",\r\n      \"restaurant\": \"Vege Deli\",\r\n      \"availableMeals\": [\"lunch\", \"dinner\"]\r\n    },\r\n    {\r\n      \"id\": 20,\r\n      \"name\": \"Minestrone Soup\",\r\n      \"restaurant\": \"Vege Deli\",\r\n      \"availableMeals\": [\"lunch\", \"dinner\"]\r\n    },\r\n    {\r\n      \"id\": 21,\r\n      \"name\": \"Pepperoni Pizza\",\r\n      \"restaurant\": \"Pizzeria\",\r\n      \"availableMeals\": [\"lunch\", \"dinner\"]\r\n    },\r\n    {\r\n      \"id\": 22,\r\n      \"name\": \"Pepperoni Pizza\",\r\n      \"restaurant\": \"Pizzeria\",\r\n      \"availableMeals\": [\"lunch\", \"dinner\"]\r\n    },\r\n    {\r\n      \"id\": 23,\r\n      \"name\": \"Hawaiian Pizza\",\r\n      \"restaurant\": \"Pizzeria\",\r\n      \"availableMeals\": [\"lunch\", \"dinner\"]\r\n    },\r\n    {\r\n      \"id\": 24,\r\n      \"name\": \"Seafood Pizza\",\r\n      \"restaurant\": \"Pizzeria\",\r\n      \"availableMeals\": [\"lunch\", \"dinner\"]\r\n    },\r\n    {\r\n      \"id\": 25,\r\n      \"name\": \"Deep Dish Pizza\",\r\n      \"restaurant\": \"Pizzeria\",\r\n      \"availableMeals\": [\"dinner\"]\r\n    },\r\n    {\r\n      \"id\": 26,\r\n      \"name\": \"Chow Mein\",\r\n      \"restaurant\": \"Panda Express\",\r\n      \"availableMeals\": [\"lunch\", \"dinner\"]\r\n    },\r\n    {\r\n      \"id\": 27,\r\n      \"name\": \"Mapo Tofu\",\r\n      \"restaurant\": \"Panda Express\",\r\n      \"availableMeals\": [\"lunch\", \"dinner\"]\r\n    },\r\n    {\r\n      \"id\": 28,\r\n      \"name\": \"Kung Pao\",\r\n      \"restaurant\": \"Panda Express\",\r\n      \"availableMeals\": [\"lunch\", \"dinner\"]\r\n    },\r\n    {\r\n      \"id\": 29,\r\n      \"name\": \"Wontons\",\r\n      \"restaurant\": \"Panda Express\",\r\n      \"availableMeals\": [\"lunch\", \"dinner\"]\r\n    },\r\n    {\r\n      \"id\": 30,\r\n      \"name\": \"Garlic Bread\",\r\n      \"restaurant\": \"Olive Garden\",\r\n      \"availableMeals\": [\"breakfast\", \"lunch\", \"dinner\"]\r\n    },\r\n    {\r\n      \"id\": 31,\r\n      \"name\": \"Ravioli\",\r\n      \"restaurant\": \"Olive Garden\",\r\n      \"availableMeals\": [\"lunch\", \"dinner\"]\r\n    },\r\n    {\r\n      \"id\": 32,\r\n      \"name\": \"Rigatoni Spaghetti\",\r\n      \"restaurant\": \"Olive Garden\",\r\n      \"availableMeals\": [\"lunch\", \"dinner\"]\r\n    },\r\n    {\r\n      \"id\": 33,\r\n      \"name\": \"Fettucine Pasta\",\r\n      \"restaurant\": \"Olive Garden\",\r\n      \"availableMeals\": [\"lunch\", \"dinner\"]\r\n    }\r\n  ]\r\n}","import React, { Component } from 'react';\r\nimport {FormControl,InputLabel,Select,MenuItem} from '@material-ui/core';\r\nimport { connect } from 'react-redux';\r\nimport {actSelectMeal,actSelectPeople} from '../actions/index'\r\nconst Meals = ['breakfast','lunch','dinner']\r\nclass Step1 extends Component {\r\n    handleChangeMeal = event =>{\r\n        this.props.selectMeal(event.target.value);\r\n        this.setState({\r\n            meal : event.target.value\r\n        })\r\n    }\r\n    handleChangePeople = event =>{\r\n        console.log(event.target.value)\r\n        this.props.selectPeople(event.target.value);\r\n        this.setState({\r\n            people : event.target.value\r\n        })\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                <FormControl fullWidth={true}  className=\"mt-16\" style = {{width:\"300px\", marginLeft:\"50px\"}}>\r\n                    <InputLabel >{<span>Please select a meal</span>}</InputLabel>\r\n                    <Select\r\n                        // value={this.state? this.state.meal : ''}\r\n                        defaultValue={this.props.meal ? this.props.meal : ''}\r\n                        onChange={(event) => this.handleChangeMeal(event)}\r\n                    >\r\n                        {Meals.map((item) => {\r\n                            return (\r\n                                <MenuItem key={item} value={item}>\r\n                                    {item}\r\n                                </MenuItem>\r\n                            )\r\n                        })}\r\n                    </Select>\r\n                </FormControl> \r\n                <FormControl fullWidth={true}  className=\"mt-16\" style = {{width:\"300px\", marginLeft:\"150px\"}}>\r\n                    <InputLabel >{<span>Please enter number of people</span>}</InputLabel>\r\n                    <Select\r\n                        // value={this.state? this.state.people : ''}\r\n                        defaultValue={this.props.people ? this.props.people : ''}\r\n                        onChange={(event) => this.handleChangePeople(event)}\r\n                    >\r\n                        {/* {Meals.map((item) => {\r\n                            return (\r\n                                <MenuItem key={item} value={item}>\r\n                                    {item}\r\n                                </MenuItem>\r\n                            )\r\n                        })} */}\r\n                        {(() => {\r\n                            const options = [];\r\n\r\n                            for (let i = 1; i <= 10; i++) {\r\n                                options.push(\r\n                                    <MenuItem key={i} value={i}>\r\n                                        {i}\r\n                                    </MenuItem>\r\n                                );\r\n                            }\r\n\r\n                            return options;\r\n                        })()}\r\n                    </Select>\r\n                </FormControl> \r\n            </div>\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        people: state.orderFood.people,\r\n        meal: state.orderFood.meal\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch, props) => {\r\n    return {\r\n        selectMeal: (meal) => {\r\n            dispatch(actSelectMeal(meal))\r\n        },\r\n        selectPeople: (people) => {\r\n            dispatch(actSelectPeople(people))\r\n        },\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Step1);","import * as Types from '../constants/index';\r\n\r\nexport const actSelectMeal= (meal) => {\r\n    return {\r\n        type: Types.SELECT_MEAL,\r\n        meal\r\n    }\r\n}\r\nexport const actSelectPeople= (people) => {\r\n    return {\r\n        type: Types.SELECT_PEOPLE,\r\n        people\r\n    }\r\n}\r\nexport const actSelectRestaurant = (restaurant) =>{\r\n    return{\r\n        type: Types.SELECT_RESTAURANT,\r\n        restaurant\r\n    }\r\n}\r\nexport const actSelectFood = (name,count) =>{\r\n    var food = {};\r\n    food.name = name;\r\n    food.count = count;\r\n    return{\r\n        type: Types.SELECT_FOOD,\r\n        food\r\n    }\r\n}\r\n\r\nexport const actResetValue = () =>{\r\n    return{\r\n        type : Types.RESET_VALUE\r\n    }\r\n}\r\n\r\nexport const actDeleteFood = (food) =>{\r\n    console.log(food);\r\n    return{\r\n        type:Types.DELETE_FOOD ,\r\n        food\r\n    }\r\n}\r\n","export const SELECT_MEAL = 'SELECT_MEAL';\r\nexport const SELECT_PEOPLE = 'SELECT_PEOPLE';\r\nexport const SELECT_RESTAURANT = 'SELECT_RESTAURANT';\r\nexport const SELECT_FOOD='SELECT_FOOD';\r\nexport const RESET_VALUE = 'RESET_VALUE';\r\nexport const DELETE_FOOD = 'DELETE_FOOD';","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {data} from '../data/dishes'\r\nimport {FormControl,InputLabel,Select,MenuItem} from '@material-ui/core';\r\nimport {actSelectRestaurant} from '../actions/index'\r\nclass Step2 extends Component {\r\n    getListRestaurant(){\r\n        var result =[]\r\n        this.getListRestaurantByMeal().map(value =>{\r\n            var index = result.indexOf(value.restaurant)\r\n            if(index === -1){\r\n                result.push(value.restaurant);\r\n            }  \r\n        })\r\n        return result\r\n    }\r\n    getListRestaurantByMeal(){\r\n        var result = [];\r\n        data.dishes.map(value =>{\r\n            var index = value.availableMeals.indexOf(this.props.meal);\r\n            if(index !== -1){\r\n                result.push(value)\r\n            }\r\n        })\r\n        return result;\r\n    }\r\n    handleChangeRestaurant = (event) =>{\r\n        this.props.selectRestaurant(event.target.value);\r\n        this.setState({\r\n            restaurant : event.target.value\r\n        })\r\n    }\r\n    render(){\r\n        return(\r\n            <FormControl fullWidth={true}  className=\"mt-16\" style = {{width:\"300px\", marginLeft:\"150px\"}}>\r\n                <InputLabel >{<span>Please select a restaurant</span>}</InputLabel>\r\n                <Select\r\n                    // value={this.state? this.state.restaurant : ''}\r\n                    defaultValue={this.props.restaurant ? this.props.restaurant : ''}\r\n                    onChange={(event) => this.handleChangeRestaurant(event)}\r\n                >\r\n                    {this.getListRestaurant().map((item) => {\r\n                        return (\r\n                            <MenuItem key={item} value={item}>\r\n                                {item}\r\n                            </MenuItem>\r\n                        )\r\n                    })}\r\n                </Select>\r\n            </FormControl> \r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = state =>{\r\n    return{\r\n        people: state.orderFood.people,\r\n        meal: state.orderFood.meal, \r\n        restaurant: state.orderFood.restaurant,\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch =>{\r\n    return {\r\n        selectRestaurant: (restaurant) => {\r\n            dispatch(actSelectRestaurant(restaurant))\r\n        },\r\n\r\n    }\r\n}\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Step2);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {data} from '../data/dishes'\r\nimport {FormControl,InputLabel,Select,MenuItem,Table,TableHead,TableRow,TableCell,TableBody,Button,IconButton,Icon,} from '@material-ui/core';\r\nimport {actSelectFood,actDeleteFood} from '../actions/index'\r\nclass Step3 extends Component {\r\n    state={\r\n        foods : [],\r\n        listFoods:[]\r\n    }\r\n    getListFoodByRestaurant(){\r\n        var result =[];\r\n        data.dishes.map(value =>{\r\n            if(value.restaurant === this.props.restaurant){\r\n                result.push(value)\r\n            }\r\n        })\r\n\r\n        return result\r\n    }\r\n    getListFood(){\r\n        var result = [];\r\n        this.getListFoodByRestaurant().map(value =>{\r\n            var index = value.availableMeals.indexOf(this.props.meal);\r\n            if(index !== -1){\r\n                result.push(value.name)\r\n            }\r\n        })\r\n        return result;\r\n    }\r\n    componentWillMount(){\r\n        var listFoods = this.getListFood();\r\n        if(this.props.foods){\r\n            this.props.foods.map(food =>{\r\n                listFoods = listFoods.filter(item => item !== food.name);\r\n            })\r\n            this.setState({\r\n                foods:this.props.foods,\r\n                listFoods:listFoods\r\n            })\r\n        }\r\n        else{\r\n            this.setState({\r\n                listFoods:listFoods\r\n            })\r\n        }\r\n    }\r\n    handleChangeFood = (event) =>{\r\n        this.setState({\r\n            selectedFood : event.target.value,\r\n\r\n        })\r\n    }\r\n\r\n    handleChangeCountFood = (event) =>{\r\n        this.setState({\r\n            selectedFoodCount : event.target.value,\r\n\r\n        })\r\n    }\r\n    addFood = () =>{\r\n        var {selectedFood,selectedFoodCount} = this.state;\r\n        var foods = this.state.foods;\r\n        if(selectedFoodCount && selectedFood){\r\n            this.props.selectFood(selectedFood,selectedFoodCount);\r\n            if(foods == null){\r\n                foods = []\r\n            }\r\n            var food = {};\r\n            food.name = selectedFood;\r\n            food.count = selectedFoodCount;\r\n            foods.push(food)\r\n            var listFoods = this.state.listFoods.filter(item => item !== this.state.selectedFood);\r\n            this.setState({\r\n                foods:foods,\r\n                listFoods:listFoods,\r\n                selectedFood : null\r\n            })\r\n        }\r\n        else{\r\n            alert('chon thieu')\r\n        }\r\n        \r\n    }\r\n    onDelete = (food) =>{\r\n        this.props.deleteFood(food)\r\n        var foods = this.state.foods;\r\n        var index = this.findFood(foods,food.name)\r\n        foods.splice(index,1);\r\n        var listFoods = this.getListFood();\r\n        this.props.foods.map(food =>{\r\n            listFoods = listFoods.filter(item => item !== food.name);\r\n        })\r\n        this.setState({\r\n            foods:foods,\r\n            listFoods:listFoods,\r\n        })\r\n    }\r\n    findFood = (foods, name) => {\r\n        var result = -1;\r\n        foods.forEach((food, index) => {\r\n            if (food.name === name) {\r\n                result = index;\r\n            }\r\n        });\r\n        return result;\r\n    }\r\n    renderFoods = (foods) =>{\r\n        var result = null;\r\n        console.log(foods)\r\n        if(foods.length > 0){\r\n            result = foods.map((food,key)=>{\r\n                return(\r\n                    <TableRow key={key}>\r\n                        <TableCell>{food.name}</TableCell>\r\n                        <TableCell>{food.count}</TableCell>\r\n                        <TableCell>\r\n                            <IconButton onClick={() => this.onDelete(food)}>\r\n                                <Icon color=\"error\">x</Icon>\r\n                            </IconButton>\r\n                        </TableCell>\r\n                    </TableRow>\r\n                );\r\n            })\r\n        }\r\n        return result;\r\n    }\r\n    componentWillReceiveProps(nextProps){\r\n        console.log(nextProps.foods)\r\n    }\r\n    render(){\r\n        // console.log(this.state.foods ? this.state.foods : '')\r\n        var foods = this.state.foods ? this.state.foods : []\r\n        return(\r\n            <div>\r\n                <FormControl fullWidth={true}  className=\"mt-16\" style = {{width:\"300px\", marginLeft:\"150px\"}}>\r\n                    <InputLabel >{<span>Please select a restaurant</span>}</InputLabel>\r\n                    <Select\r\n                        // value={this.state? this.state.restaurant : ''}\r\n                        // defaultValue={this.props.restaurant ? this.props.restaurant : ''}\r\n                        onChange={(event) => this.handleChangeFood(event)}\r\n                    >\r\n                        {this.state.listFoods.map((item) => {\r\n                            return (\r\n                                <MenuItem key={item} value={item}>\r\n                                    {item}\r\n                                </MenuItem>\r\n                            )\r\n                        })}\r\n                    </Select>\r\n                </FormControl>\r\n                <FormControl fullWidth={true}  className=\"mt-16\" style = {{width:\"300px\", marginLeft:\"150px\"}}>\r\n                    <InputLabel >{<span>Please enter number of people</span>}</InputLabel>\r\n                    <Select\r\n                        // value={this.state? this.state.people : ''}\r\n                        // defaultValue={this.props.people ? this.props.people : ''}\r\n                        onChange={(event) => this.handleChangeCountFood(event)}\r\n                    >\r\n                        {/* {Meals.map((item) => {\r\n                            return (\r\n                                <MenuItem key={item} value={item}>\r\n                                    {item}\r\n                                </MenuItem>\r\n                            )\r\n                        })} */}\r\n                        {(() => {\r\n                            const options = [];\r\n\r\n                            for (let i = 1; i <= 10; i++) {\r\n                                options.push(\r\n                                    <MenuItem key={i} value={i}>\r\n                                        {i}\r\n                                    </MenuItem>\r\n                                );\r\n                            }\r\n\r\n                            return options;\r\n                        })()}\r\n                    </Select>\r\n                </FormControl>  \r\n                <Button variant=\"contained\" onClick={this.addFood} color=\"primary\" style={{marginTop:\"10px\", marginLeft:\"50px\"}}>Chose</Button>\r\n                <Table className=\"crud-table\" style={{ whiteSpace: \"pre\", width:\"300px\", marginLeft:\"40%\", marginTop:\"30px\"}}>\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell>Food</TableCell>\r\n                            <TableCell>Count</TableCell>\r\n                            <TableCell></TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {this.renderFoods(foods)}\r\n                    </TableBody>\r\n                </Table>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = state =>{\r\n    return{\r\n        people: state.orderFood.people,\r\n        meal: state.orderFood.meal, \r\n        restaurant: state.orderFood.restaurant,\r\n        foods: state.orderFood.foods\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch =>{\r\n    return {\r\n        selectFood: (food,count) => {\r\n            dispatch(actSelectFood(food,count))\r\n        },\r\n        deleteFood: (food) => {\r\n            dispatch(actDeleteFood(food))\r\n        },\r\n        \r\n    }\r\n}\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Step3);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {Table,TableHead,TableRow,TableCell,TableBody,Button} from '@material-ui/core';\r\nclass Review extends Component {\r\n    renderFoods = (foods) =>{\r\n        var result = null;\r\n        if(foods.length > 0){\r\n            result = foods.map((food,key)=>{\r\n                return(\r\n                    <TableRow key={key}>\r\n                        <TableCell>{food.name}</TableCell>\r\n                        <TableCell>{food.count}</TableCell>\r\n                    </TableRow>\r\n                );\r\n            })\r\n        }\r\n        return result;\r\n    }\r\n    render(){\r\n        return(\r\n            <div style={{marginLeft:\"300px\"}}>\r\n                <p>Meal : {this.props.meal}</p>\r\n                <p>People : {this.props.people}</p>\r\n                <p>Restaurant : {this.props.restaurant}</p>\r\n                <p>Dishes : </p>\r\n                <Table className=\"crud-table\" style={{ whiteSpace: \"pre\", width:\"300px\", marginLeft:\"100px\"}}>\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell>Food</TableCell>\r\n                            <TableCell>Count</TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {this.renderFoods(this.props.foods)}\r\n                    </TableBody>\r\n                </Table>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = state =>{\r\n    return{\r\n        people: state.orderFood.people,\r\n        meal: state.orderFood.meal, \r\n        restaurant: state.orderFood.restaurant,\r\n        foods: state.orderFood.foods\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch =>{\r\n    return {\r\n\r\n\r\n    }\r\n}\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Review);","import React, { Component } from 'react';\nimport {data} from './data/dishes';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Step1 from './step/Step1';\nimport Step2 from './step/Step2';\nimport Step3 from './step/Step3';\nimport Review from './step/Review';\nimport { connect } from 'react-redux';\nimport { SignalCellularNullOutlined } from '@material-ui/icons';\nimport {actResetValue} from './actions/index'\nconst steps = ['Step 1','Step 2','Step 3','Review']\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { \n      activeStep: 0 \n    };\n\n  }\n  handleBack = () =>{\n    var activeStep = this.state.activeStep - 1\n    this.setState({\n      activeStep:activeStep\n    })\n  } \n  handleNext = () =>{\n    if(this.checkData() === 1){\n      var activeStep = this.state.activeStep + 1\n      this.setState({\n        activeStep:activeStep\n      })\n    }\n    else if(this.checkData() === 0){\n      alert('chua nhap du');\n    }\n    else if(this.checkData() === 2){\n      alert('chua du xuat');\n    }\n\n  }\n  handleReset = ()=>{\n    this.props.resetValue();\n    this.setState({\n      activeStep:0\n    })\n  }\n  checkData = () =>{\n    var {activeStep} = this.state;\n    var {people,meal,restaurant,foods} = this.props\n    var result = 1;\n    if(activeStep === 0){\n      if(!people || ! meal){\n        result = 0;\n      }\n      else{\n        result = 1;\n      }\n    }\n    else if(activeStep === 1){\n      if(!restaurant){\n        result = 0;\n      }\n      else{\n        result = 1;\n      }\n    }\n    else if(activeStep === 2){\n      if(!foods){\n        result = 0;\n      }\n      else{\n        var value = null\n        foods.map(food =>{\n          value = value + food.count\n        })\n        if(value < people){\n          result = 2\n        }\n        else{\n          result = 1;\n        }\n      }\n    }\n    return result;\n  }\n  checkStep(){\n    var {activeStep} = this.state;\n    switch (activeStep){\n      case 0:\n        return (<Step1/>);\n      case 1:\n        return (<Step2/>);\n      case 2:\n        return (<Step3/>);\n      case 3:\n        return (<Review/>);\n    }\n  }\n\n  render() {\n    var {activeStep} = this.state\n    return (\n      <div className=\"App\">\n        <Stepper activeStep={activeStep} alternativeLabel>\n          {steps.map((step) => (\n            <Step key={step}>\n              <StepLabel>{step}</StepLabel>\n            </Step>\n          ))}\n        </Stepper>\n        {this.checkStep()}\n        <div style={{marginTop:\"30px\"}}>\n          {activeStep === steps.length ? (\n            <div>\n              <Button variant=\"contained\" onClick={this.handleReset} color=\"default\" style={{marginLeft:\"50px\"}}>Reset</Button>\n            </div>\n          ) : (\n            <div>\n              <div>\n                <Button\n                  disabled={activeStep === 0}\n                  onClick={this.handleBack}\n                  style={{marginLeft:\"50px\"}}\n                >\n                  Back\n                </Button>\n                <Button disabled={this.state.isDisable} variant=\"contained\" color=\"primary\" onClick={this.handleNext} style={{float:\"right\", marginRight:\"50px\"}}>\n                  {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\n                </Button>\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state =>{\n  return{\n      people: state.orderFood.people,\n      meal: state.orderFood.meal, \n      restaurant: state.orderFood.restaurant,\n      foods: state.orderFood.foods\n  }\n};\n\nconst mapDispatchToProps = dispatch =>{\n  return {\n    resetValue: () => {\n      dispatch(actResetValue())\n    },\n\n  }\n}\nexport default connect(mapStateToProps,mapDispatchToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import * as Types from './../constants/index';\r\nvar initialState = {};\r\nvar findFood = (foods, name) => {\r\n    var result = -1;\r\n    foods.forEach((food, index) => {\r\n        if (food.name === name) {\r\n            result = index;\r\n        }\r\n    });\r\n    return result;\r\n}\r\nconst orderFood = (state=initialState,action)=>{\r\n    switch(action.type){\r\n        case Types.SELECT_MEAL:{\r\n            state.meal = action.meal;\r\n            state.restaurant = '';\r\n            state.foods = null;\r\n            return {\r\n                ...state\r\n            }\r\n        }\r\n        case Types.SELECT_PEOPLE:{\r\n            state.people = action.people;\r\n            state.foods = null;\r\n            return {\r\n                ...state\r\n            }\r\n        }\r\n        case Types.SELECT_RESTAURANT:{\r\n            state.restaurant = action.restaurant;\r\n            state.foods = null;\r\n            return {\r\n                ...state\r\n            }\r\n        }\r\n        case Types.SELECT_FOOD:{\r\n            var foods = state.foods;\r\n            if(foods == null){\r\n                foods = []\r\n            }\r\n            foods.push(action.food)\r\n            state.foods = foods;\r\n            return {\r\n                ...state\r\n            }\r\n        }\r\n        case Types.RESET_VALUE:{\r\n            state = {};\r\n            return{\r\n                ...state\r\n            }\r\n        }\r\n        case Types.DELETE_FOOD:{\r\n            var index = findFood(state.foods,action.food.name)\r\n            console.log(index)\r\n            state.foods.splice(index,1);\r\n            return{\r\n                ...state\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport default orderFood;\r\n","import { combineReducers } from 'redux';\r\nimport orderFood from './orderFood';\r\nconst appReducers = combineReducers({\r\n    orderFood\r\n});\r\n\r\nexport default appReducers;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport appReducers from './reducers/index';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\n\n\nconst store = createStore(\n    appReducers,\n    compose(\n        applyMiddleware(thunk),\n        window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n    ),\n);\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root')\n);\n\n\nserviceWorker.unregister();\n"],"sourceRoot":""}